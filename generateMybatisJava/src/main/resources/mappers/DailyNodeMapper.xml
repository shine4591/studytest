<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.andy.user.service.DailyNodeMapper">
  <resultMap id="BaseResultMap" type="com.andy.user.model.DailyNode">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="tradeDate" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="stockCode" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="stockName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="closePrice" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="maxPrice" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="minPrice" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="openPrice" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="prevClose" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="changeAmount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="changePercent" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="changeRate" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="volumn" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="turnover" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="totalMarketValue" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="circleMarketValue" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="createtime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="lasttime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, tradeDate, stockCode, stockName, closePrice, maxPrice, minPrice, openPrice, prevClose, 
    changeAmount, changePercent, changeRate, volumn, turnover, totalMarketValue, circleMarketValue, 
    createtime, lasttime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ts_dailynode
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ts_dailynode
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.andy.user.model.DailyNode">
    insert into ts_dailynode (id, tradeDate, stockCode, 
      stockName, closePrice, maxPrice, 
      minPrice, openPrice, prevClose, 
      changeAmount, changePercent, changeRate, 
      volumn, turnover, totalMarketValue, 
      circleMarketValue, createtime, lasttime
      )
    values (#{id,jdbcType=INTEGER}, #{tradedate,jdbcType=INTEGER}, #{stockcode,jdbcType=INTEGER}, 
      #{stockname,jdbcType=VARCHAR}, #{closeprice,jdbcType=DECIMAL}, #{maxprice,jdbcType=DECIMAL}, 
      #{minprice,jdbcType=DECIMAL}, #{openprice,jdbcType=DECIMAL}, #{prevclose,jdbcType=DECIMAL}, 
      #{changeamount,jdbcType=DECIMAL}, #{changepercent,jdbcType=DECIMAL}, #{changerate,jdbcType=DECIMAL}, 
      #{volumn,jdbcType=BIGINT}, #{turnover,jdbcType=DECIMAL}, #{totalmarketvalue,jdbcType=DECIMAL}, 
      #{circlemarketvalue,jdbcType=DECIMAL}, #{createtime,jdbcType=TIMESTAMP}, #{lasttime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.andy.user.model.DailyNode">
    insert into ts_dailynode
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tradedate != null">
        tradeDate,
      </if>
      <if test="stockcode != null">
        stockCode,
      </if>
      <if test="stockname != null">
        stockName,
      </if>
      <if test="closeprice != null">
        closePrice,
      </if>
      <if test="maxprice != null">
        maxPrice,
      </if>
      <if test="minprice != null">
        minPrice,
      </if>
      <if test="openprice != null">
        openPrice,
      </if>
      <if test="prevclose != null">
        prevClose,
      </if>
      <if test="changeamount != null">
        changeAmount,
      </if>
      <if test="changepercent != null">
        changePercent,
      </if>
      <if test="changerate != null">
        changeRate,
      </if>
      <if test="volumn != null">
        volumn,
      </if>
      <if test="turnover != null">
        turnover,
      </if>
      <if test="totalmarketvalue != null">
        totalMarketValue,
      </if>
      <if test="circlemarketvalue != null">
        circleMarketValue,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="lasttime != null">
        lasttime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tradedate != null">
        #{tradedate,jdbcType=INTEGER},
      </if>
      <if test="stockcode != null">
        #{stockcode,jdbcType=INTEGER},
      </if>
      <if test="stockname != null">
        #{stockname,jdbcType=VARCHAR},
      </if>
      <if test="closeprice != null">
        #{closeprice,jdbcType=DECIMAL},
      </if>
      <if test="maxprice != null">
        #{maxprice,jdbcType=DECIMAL},
      </if>
      <if test="minprice != null">
        #{minprice,jdbcType=DECIMAL},
      </if>
      <if test="openprice != null">
        #{openprice,jdbcType=DECIMAL},
      </if>
      <if test="prevclose != null">
        #{prevclose,jdbcType=DECIMAL},
      </if>
      <if test="changeamount != null">
        #{changeamount,jdbcType=DECIMAL},
      </if>
      <if test="changepercent != null">
        #{changepercent,jdbcType=DECIMAL},
      </if>
      <if test="changerate != null">
        #{changerate,jdbcType=DECIMAL},
      </if>
      <if test="volumn != null">
        #{volumn,jdbcType=BIGINT},
      </if>
      <if test="turnover != null">
        #{turnover,jdbcType=DECIMAL},
      </if>
      <if test="totalmarketvalue != null">
        #{totalmarketvalue,jdbcType=DECIMAL},
      </if>
      <if test="circlemarketvalue != null">
        #{circlemarketvalue,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lasttime != null">
        #{lasttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.andy.user.model.DailyNode">
    update ts_dailynode
    <set>
      <if test="tradedate != null">
        tradeDate = #{tradedate,jdbcType=INTEGER},
      </if>
      <if test="stockcode != null">
        stockCode = #{stockcode,jdbcType=INTEGER},
      </if>
      <if test="stockname != null">
        stockName = #{stockname,jdbcType=VARCHAR},
      </if>
      <if test="closeprice != null">
        closePrice = #{closeprice,jdbcType=DECIMAL},
      </if>
      <if test="maxprice != null">
        maxPrice = #{maxprice,jdbcType=DECIMAL},
      </if>
      <if test="minprice != null">
        minPrice = #{minprice,jdbcType=DECIMAL},
      </if>
      <if test="openprice != null">
        openPrice = #{openprice,jdbcType=DECIMAL},
      </if>
      <if test="prevclose != null">
        prevClose = #{prevclose,jdbcType=DECIMAL},
      </if>
      <if test="changeamount != null">
        changeAmount = #{changeamount,jdbcType=DECIMAL},
      </if>
      <if test="changepercent != null">
        changePercent = #{changepercent,jdbcType=DECIMAL},
      </if>
      <if test="changerate != null">
        changeRate = #{changerate,jdbcType=DECIMAL},
      </if>
      <if test="volumn != null">
        volumn = #{volumn,jdbcType=BIGINT},
      </if>
      <if test="turnover != null">
        turnover = #{turnover,jdbcType=DECIMAL},
      </if>
      <if test="totalmarketvalue != null">
        totalMarketValue = #{totalmarketvalue,jdbcType=DECIMAL},
      </if>
      <if test="circlemarketvalue != null">
        circleMarketValue = #{circlemarketvalue,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lasttime != null">
        lasttime = #{lasttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.andy.user.model.DailyNode">
    update ts_dailynode
    set tradeDate = #{tradedate,jdbcType=INTEGER},
      stockCode = #{stockcode,jdbcType=INTEGER},
      stockName = #{stockname,jdbcType=VARCHAR},
      closePrice = #{closeprice,jdbcType=DECIMAL},
      maxPrice = #{maxprice,jdbcType=DECIMAL},
      minPrice = #{minprice,jdbcType=DECIMAL},
      openPrice = #{openprice,jdbcType=DECIMAL},
      prevClose = #{prevclose,jdbcType=DECIMAL},
      changeAmount = #{changeamount,jdbcType=DECIMAL},
      changePercent = #{changepercent,jdbcType=DECIMAL},
      changeRate = #{changerate,jdbcType=DECIMAL},
      volumn = #{volumn,jdbcType=BIGINT},
      turnover = #{turnover,jdbcType=DECIMAL},
      totalMarketValue = #{totalmarketvalue,jdbcType=DECIMAL},
      circleMarketValue = #{circlemarketvalue,jdbcType=DECIMAL},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      lasttime = #{lasttime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>