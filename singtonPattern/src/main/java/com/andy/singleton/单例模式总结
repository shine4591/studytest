每种单例写法的优、缺点:

饿汉式单例：线程安全，类被加载即实例化 占用内存
懒汉式单例：用到才创建，不加锁线程不安全，加锁效率低
内部类单例：类加载器保证线程安全，用到才创建，构造方法加上判断可防反射，比较完美
枚举式单例：自由序列化，jdk判断使反射无法破坏，线程安全，推荐写法
容器缓存单例：方便管理大量单例，线程不安全，无法防止反射攻击
ThreadLocal单例：单线程内实例唯一，多线程内线程不安全


破坏单例模式的方式:
反射破坏单例，解决办法：在构造器内处理，判断已有实例就抛出异常，或使用枚举式单例，jdk已做出判断
序列化反序列化破坏单例，解决办法：在单例类中，声明readResolve()方法，返回单例。则反序列化时，已生成的新对象会被抛弃，继续使用原对象
